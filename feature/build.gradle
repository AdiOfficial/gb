apply plugin: 'com.android.feature'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 24 // scheduledActions.removeIf in GBScheduler requires 24.
        targetSdkVersion 28
        versionCode version_code
        versionName ".477"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "int", "VERSIONCODE", "4"
            buildConfigField "String", "VERSIONNAME", "\".0.0.0.500d\""
            buildConfigField "boolean", "SHOWSTATS", "true"
        }
        debug {
            minifyEnabled false
            buildConfigField "int", "VERSIONCODE", "4"
            buildConfigField "String", "VERSIONNAME", "\"0.0.0.500r\""
            buildConfigField "boolean", "SHOWSTATS", "true"
        }
    }
}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(':base')
    implementation project(':gblib')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    // added this to get ViewModelProviders
}

// FIXME We have two libraries that request old support version. Below forcing both to 28

// ./gradlew feature:dependencies --configuration debugFeatureRuntimeClasspath
// SSIV requests 27.1.0. Would have to compile (test) on our own to make it use 28 at compile
// Lifecycle:1.1.1 requires 26.x  It's deprecated, so need to use AndroidX libraries, but using those
//    don't compile because AppCompatActivity doesn't implement LifeCycleOwner anymore, so needs more work
//    "It looks like there's a ComponentActivity both at androidx.activity.ComponentActivity and
//     androidx.core.app.ComponentActivity. The former implements the LifecycleOwner interface,
//     while the second doesn't. I think your IDE is using the first one and the runtime is trying
//     to use the second one. I guess this is why AndroidX is still mostly in alpha. â€“ (from 1.0)

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            details.useVersion '28.0.0'
        }
    }
}
