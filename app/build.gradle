apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    ext.app_version_code = 19
    ext.app_version_name = '0.2.804'

    defaultConfig {
        applicationId "com.zwsi.gb.app"
        minSdkVersion 24 // scheduledActions.removeIf in GBScheduler requires 24.
        targetSdkVersion 28
        //versionCode app_version_code
        //versionName "${app_version_name}"
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "int", "VERSIONCODE", "${app_version_code}"
            buildConfigField "String", "VERSIONNAME", "\"${app_version_name}r\""
            buildConfigField "boolean", "SHOWSTATS", "false"
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "int", "VERSIONCODE", "${app_version_code}"
            buildConfigField "String", "VERSIONNAME", "\"${app_version_name}d\""
            buildConfigField "boolean", "SHOWSTATS", "true"
        }
    }
    productFlavors {
    }
}

dependencies {
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    api 'com.android.support:support-v4:28.0.0'
    api 'com.android.support:design:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(':gblib')
    testImplementation 'junit:junit:4.12'
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test:runner'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'  // added this to get ViewModelProviders
    implementation 'com.squareup.moshi:moshi:1.8.0' // added for moshi
    compileOnly 'com.squareup.moshi:moshi-kotlin-codegen:1.8.0'// added for moshi
    // Next line because of the below URL. Not sure this is the correct line, though.
    // https://developer.android.com/studio/build/dependencies?utm_source=android-studio#annotation_processor
    annotationProcessor 'com.squareup.moshi:moshi-kotlin-codegen:1.8.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // added for moshi
}
repositories {
    mavenCentral()
}
// FIXME We have two libraries that request old support version. Below forcing both to 28

// ./gradlew feature:dependencies --configuration debugFeatureRuntimeClasspath
// SSIV requests 27.1.0. Would have to compile (test) on our own to make it use 28 at compile
// Lifecycle:1.1.1 requires 26.x  It's deprecated, so need to use AndroidX libraries, but using those
//    don't compile because AppCompatActivity doesn't implement LifeCycleOwner anymore, so needs more work
//    "It looks like there's a ComponentActivity both at androidx.activity.ComponentActivity and
//     androidx.core.app.ComponentActivity. The former implements the LifecycleOwner interface,
//     while the second doesn't. I think your IDE is using the first one and the runtime is trying
//     to use the second one. I guess this is why AndroidX is still mostly in alpha. â€“ (from 1.0)

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            details.useVersion '28.0.0'
        }
    }
}